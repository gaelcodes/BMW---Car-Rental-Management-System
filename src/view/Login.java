/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.event.MouseEvent;
import java.awt.BorderLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Dimension;
import java.awt.Color;
import java.awt.Font;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import javax.swing.border.EmptyBorder;

/**
 *
 * @author User
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    // OTP-related variables
    private String generatedOtp = null;
    private long otpTimestamp = 0;
    private static final long OTP_VALIDITY_TIME = 300000; // 5 minutes in milliseconds
    private int loginAttempts = 0;
    private static final int MAX_LOGIN_ATTEMPTS = 3;

    // Email configuration - you can modify these as needed
    private static final String ADMIN_EMAIL = "kyriegael4@gmail.com"; // Change to actual admin email

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        // Modern Login Components
        mainPanel = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        welcomeLabel = new javax.swing.JLabel();
        subtitleLabel = new javax.swing.JLabel();
        rightPanel = new javax.swing.JPanel();
        loginCard = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        closeBtn = new javax.swing.JButton();
        minimizeBtn = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        formPanel = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        otpLabel = new javax.swing.JLabel();
        otpField = new javax.swing.JPasswordField();
        getOtpBtn = new javax.swing.JButton();
        buttonPanel = new javax.swing.JPanel();
        loginBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new Color(248, 250, 252));
        setUndecorated(true);
        setSize(1000, 600);
        setLocationRelativeTo(null);
        getContentPane().setLayout(new BorderLayout());

        // Main Panel with split layout
        mainPanel.setLayout(new BorderLayout());
        mainPanel.setBackground(new Color(248, 250, 252));

        // Left Panel - Branding
        leftPanel.setBackground(new Color(15, 23, 42));
        leftPanel.setLayout(new GridBagLayout());
        leftPanel.setPreferredSize(new Dimension(400, 0));
        
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(20, 20, 20, 20);
        
        // BMW Logo placeholder
        logoLabel.setFont(new Font("Segoe UI", Font.BOLD, 48));
        logoLabel.setForeground(Color.WHITE);
        logoLabel.setText("🚗");
        logoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gbc.gridx = 0; gbc.gridy = 0; gbc.weighty = 0.3;
        leftPanel.add(logoLabel, gbc);
        
        // Welcome text
        welcomeLabel.setFont(new Font("Segoe UI", Font.BOLD, 32));
        welcomeLabel.setForeground(Color.WHITE);
        welcomeLabel.setText("Welcome Back");
        welcomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gbc.gridx = 0; gbc.gridy = 1; gbc.weighty = 0.1;
        leftPanel.add(welcomeLabel, gbc);
        
        subtitleLabel.setFont(new Font("Segoe UI", Font.PLAIN, 16));
        subtitleLabel.setForeground(new Color(203, 213, 225));
        subtitleLabel.setText("BMW Car Rental Management System");
        subtitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gbc.gridx = 0; gbc.gridy = 2; gbc.weighty = 0.1;
        leftPanel.add(subtitleLabel, gbc);
        
        mainPanel.add(leftPanel, BorderLayout.WEST);

        // Right Panel - Login Form
        rightPanel.setBackground(new Color(248, 250, 252));
        rightPanel.setLayout(new BorderLayout());
        rightPanel.setBorder(new EmptyBorder(40, 40, 40, 40));

        // Login Card
        loginCard.setBackground(Color.WHITE);
        loginCard.setBorder(javax.swing.BorderFactory.createCompoundBorder(
            javax.swing.BorderFactory.createLineBorder(new Color(226, 232, 240), 1),
            javax.swing.BorderFactory.createEmptyBorder(30, 30, 30, 30)
        ));
        loginCard.setLayout(new BorderLayout());

        // Header Panel
        headerPanel.setBackground(Color.WHITE);
        headerPanel.setLayout(new BorderLayout());
        headerPanel.setPreferredSize(new Dimension(0, 50));

        // Control buttons
        javax.swing.JPanel controlPanel = new javax.swing.JPanel(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));
        controlPanel.setBackground(Color.WHITE);
        controlPanel.setOpaque(true);
        
        minimizeBtn.setBackground(new Color(59, 130, 246));
        minimizeBtn.setForeground(Color.WHITE);
        minimizeBtn.setFont(new Font("Segoe UI", Font.BOLD, 14));
        minimizeBtn.setText("−");
        minimizeBtn.setBorderPainted(false);
        minimizeBtn.setFocusPainted(false);
        minimizeBtn.setPreferredSize(new Dimension(30, 30));
        controlPanel.add(minimizeBtn);
        
        closeBtn.setBackground(new Color(239, 68, 68));
        closeBtn.setForeground(Color.WHITE);
        closeBtn.setFont(new Font("Segoe UI", Font.BOLD, 14));
        closeBtn.setText("✕");
        closeBtn.setBorderPainted(false);
        closeBtn.setFocusPainted(false);
        closeBtn.setPreferredSize(new Dimension(30, 30));
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        controlPanel.add(closeBtn);
        
        headerPanel.add(controlPanel, BorderLayout.EAST);

        titleLabel.setFont(new Font("Segoe UI", Font.BOLD, 24));
        titleLabel.setForeground(new Color(15, 23, 42));
        titleLabel.setText("Admin Login");
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        headerPanel.add(titleLabel, BorderLayout.WEST);

        loginCard.add(headerPanel, BorderLayout.NORTH);

        // Form Panel
        formPanel.setBackground(Color.WHITE);
        formPanel.setLayout(new GridBagLayout());
        formPanel.setBorder(new EmptyBorder(20, 0, 20, 0));

        GridBagConstraints formGbc = new GridBagConstraints();
        formGbc.insets = new Insets(10, 0, 10, 0);
        formGbc.anchor = GridBagConstraints.WEST;
        formGbc.fill = GridBagConstraints.HORIZONTAL;

        // Username Field
        usernameLabel.setFont(new Font("Segoe UI", Font.BOLD, 14));
        usernameLabel.setForeground(new Color(51, 65, 85));
        usernameLabel.setText("Username");
        formGbc.gridx = 0; formGbc.gridy = 0; formGbc.weightx = 1.0;
        formPanel.add(usernameLabel, formGbc);

        usernameField.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        usernameField.setForeground(new Color(51, 65, 85));
        usernameField.setBorder(javax.swing.BorderFactory.createCompoundBorder(
            javax.swing.BorderFactory.createLineBorder(new Color(226, 232, 240), 1),
            javax.swing.BorderFactory.createEmptyBorder(12, 15, 12, 15)
        ));
        usernameField.setPreferredSize(new Dimension(300, 45));
        formGbc.gridx = 0; formGbc.gridy = 1; formGbc.weightx = 1.0;
        formPanel.add(usernameField, formGbc);

        // Password Field
        passwordLabel.setFont(new Font("Segoe UI", Font.BOLD, 14));
        passwordLabel.setForeground(new Color(51, 65, 85));
        passwordLabel.setText("Password");
        formGbc.gridx = 0; formGbc.gridy = 2; formGbc.weightx = 1.0;
        formPanel.add(passwordLabel, formGbc);

        passwordField.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        passwordField.setForeground(new Color(51, 65, 85));
        passwordField.setBorder(javax.swing.BorderFactory.createCompoundBorder(
            javax.swing.BorderFactory.createLineBorder(new Color(226, 232, 240), 1),
            javax.swing.BorderFactory.createEmptyBorder(12, 15, 12, 15)
        ));
        passwordField.setPreferredSize(new Dimension(300, 45));
        formGbc.gridx = 0; formGbc.gridy = 3; formGbc.weightx = 1.0;
        formPanel.add(passwordField, formGbc);

        // OTP Field with Get OTP button
        javax.swing.JPanel otpPanel = new javax.swing.JPanel(new BorderLayout(10, 0));
        otpPanel.setBackground(Color.WHITE);
        otpPanel.setOpaque(true);

        otpLabel.setFont(new Font("Segoe UI", Font.BOLD, 14));
        otpLabel.setForeground(new Color(51, 65, 85));
        otpLabel.setText("OTP Code");
        formGbc.gridx = 0; formGbc.gridy = 4; formGbc.weightx = 1.0;
        formPanel.add(otpLabel, formGbc);

        otpField.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        otpField.setForeground(new Color(51, 65, 85));
        otpField.setBorder(javax.swing.BorderFactory.createCompoundBorder(
            javax.swing.BorderFactory.createLineBorder(new Color(226, 232, 240), 1),
            javax.swing.BorderFactory.createEmptyBorder(12, 15, 12, 15)
        ));
        otpField.setPreferredSize(new Dimension(200, 45));
        otpPanel.add(otpField, BorderLayout.CENTER);

        getOtpBtn.setBackground(new Color(59, 130, 246));
        getOtpBtn.setForeground(Color.WHITE);
        getOtpBtn.setFont(new Font("Segoe UI", Font.BOLD, 12));
        getOtpBtn.setText("Get OTP");
        getOtpBtn.setBorderPainted(false);
        getOtpBtn.setFocusPainted(false);
        getOtpBtn.setPreferredSize(new Dimension(80, 45));
        getOtpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getOtpBtnActionPerformed(evt);
            }
        });
        otpPanel.add(getOtpBtn, BorderLayout.EAST);

        formGbc.gridx = 0; formGbc.gridy = 5; formGbc.weightx = 1.0;
        formPanel.add(otpPanel, formGbc);

        loginCard.add(formPanel, BorderLayout.CENTER);

        // Button Panel
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 15, 10));

        resetBtn.setBackground(new Color(107, 114, 128));
        resetBtn.setForeground(Color.WHITE);
        resetBtn.setFont(new Font("Segoe UI", Font.BOLD, 14));
        resetBtn.setText("🔄 Reset");
        resetBtn.setBorderPainted(false);
        resetBtn.setFocusPainted(false);
        resetBtn.setPreferredSize(new Dimension(120, 45));
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(resetBtn);

        loginBtn.setBackground(new Color(16, 185, 129));
        loginBtn.setForeground(Color.WHITE);
        loginBtn.setFont(new Font("Segoe UI", Font.BOLD, 14));
        loginBtn.setText("🔐 Login");
        loginBtn.setBorderPainted(false);
        loginBtn.setFocusPainted(false);
        loginBtn.setPreferredSize(new Dimension(120, 45));
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(loginBtn);

        loginCard.add(buttonPanel, BorderLayout.SOUTH);

        rightPanel.add(loginCard, BorderLayout.CENTER);
        mainPanel.add(rightPanel, BorderLayout.CENTER);

        getContentPane().add(mainPanel, BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Modern Event Handlers
    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {
        System.exit(0);
    }
    
    private void getOtpBtnActionPerformed(java.awt.event.ActionEvent evt) {
        String username = usernameField.getText().trim();
        String password = new String(passwordField.getPassword()).trim();

        // Validate inputs
        if (username.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Please enter your username.", "Input Error",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (password.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Please enter your password.", "Input Error",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // First verify username and password before sending OTP
        if (!username.equals("Admin") || !password.equals("Ishimwe@Gael")) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Invalid username or password. Please check your credentials.", "Authentication Error",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Generate random 6-digit OTP
            generatedOtp = String.valueOf((int) (Math.random() * 900000) + 100000);
            otpTimestamp = System.currentTimeMillis();

            // Create email content
            String subject = "BMW Car Rental - Login OTP Verification";
            String body = "Dear Admin,\n\n" +
                    "Your OTP for BMW Car Rental System login is: " + generatedOtp + "\n\n" +
                    "This OTP is valid for 5 minutes only.\n" +
                    "Please do not share this code with anyone.\n\n" +
                    "If you did not request this login, please contact system administrator immediately.\n\n" +
                    "Best regards,\n" +
                    "BMW Car Rental System";

            // Send OTP via email
            EmailSender emailSender = new EmailSender();
            emailSender.sendEmail(ADMIN_EMAIL, subject, body);

            // Disable Get OTP button temporarily to prevent spam
            getOtpBtn.setEnabled(false);
            getOtpBtn.setText("⏳ Wait...");

            // Re-enable button after 30 seconds
            javax.swing.Timer timer = new javax.swing.Timer(30000, (e) -> {
                getOtpBtn.setEnabled(true);
                getOtpBtn.setText("Get OTP");
            });
            timer.setRepeats(false);
            timer.start();

            javax.swing.JOptionPane.showMessageDialog(this,
                    "OTP has been sent to " + ADMIN_EMAIL
                            + "\nPlease check your email and enter the OTP below.\nOTP is valid for 5 minutes.",
                    "OTP Sent Successfully",
                    javax.swing.JOptionPane.INFORMATION_MESSAGE);

            // Focus on OTP field
            otpField.requestFocus();

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Failed to send OTP. Please check your internet connection and try again.\nError: "
                            + e.getMessage(),
                    "Email Error",
                    javax.swing.JOptionPane.ERROR_MESSAGE);

            // Re-enable button if there was an error
            getOtpBtn.setEnabled(true);
            getOtpBtn.setText("Get OTP");
        }
    }
    
    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // Reset all fields
        usernameField.setText("");
        passwordField.setText("");
        otpField.setText("");
        generatedOtp = null;
        otpTimestamp = 0;
        loginAttempts = 0;
        
        // Re-enable buttons
        getOtpBtn.setEnabled(true);
        getOtpBtn.setText("Get OTP");
        loginBtn.setEnabled(true);
        
        // Focus on username field
        usernameField.requestFocus();
    }
    
    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {
        String username = usernameField.getText().trim();
        String password = new String(passwordField.getPassword()).trim();
        String enteredOtp = new String(otpField.getPassword()).trim();

        // Validation
        if (username.isEmpty() || password.isEmpty() || enteredOtp.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Please enter username, password, and OTP.", "Input Error",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Check if OTP was generated
        if (generatedOtp == null) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Please generate OTP first by clicking 'Get OTP' button.", "OTP Required",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Check OTP expiration (5 minutes)
        long currentTime = System.currentTimeMillis();
        if (currentTime - otpTimestamp > OTP_VALIDITY_TIME) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "OTP has expired. Please generate a new OTP.", "OTP Expired",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            generatedOtp = null; // Clear expired OTP
            return;
        }

        // Verify credentials and OTP
        if (username.equals("Admin") && password.equals("Ishimwe@Gael") && enteredOtp.equals(generatedOtp)) {
            // Successful login
            try {
                // Send login notification email
                EmailSender emailSender = new EmailSender();
                String subject = "BMW Car Rental - Successful Login Alert";
                String body = "Dear Admin,\n\n" +
                        "You have successfully logged into the BMW Car Rental System.\n\n" +
                        "Login Time: " + new java.util.Date().toString() + "\n" +
                        "Login Method: OTP Authentication\n\n" +
                        "If this was not you, please contact system administrator immediately.\n\n" +
                        "Best regards,\n" +
                        "BMW Car Rental System";

                emailSender.sendEmail(ADMIN_EMAIL, subject, body);

            } catch (Exception e) {
                System.out.println("Failed to send login notification email: " + e.getMessage());
            }

            // Clear OTP data
            generatedOtp = null;
            otpTimestamp = 0;
            loginAttempts = 0;

            // Open main application
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Login successful! Welcome to BMW Car Rental System.", "Login Success",
                    javax.swing.JOptionPane.INFORMATION_MESSAGE);

            new Customer().setVisible(true);
            this.dispose();

        } else {
            // Failed login
            loginAttempts++;

            if (loginAttempts >= MAX_LOGIN_ATTEMPTS) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Too many failed login attempts. Access blocked for security.\nPlease restart the application to try again.",
                        "Login Blocked",
                        javax.swing.JOptionPane.ERROR_MESSAGE);

                // Disable login components
                loginBtn.setEnabled(false);
                getOtpBtn.setEnabled(false);

            } else {
                String errorMessage;
                if (!username.equals("Admin") || !password.equals("Ishimwe@Gael")) {
                    errorMessage = "Invalid username or password.";
                } else {
                    errorMessage = "Invalid OTP. Please check the code sent to your email.";
                }

                javax.swing.JOptionPane.showMessageDialog(this,
                        errorMessage + "\nAttempt " + loginAttempts + " of " + MAX_LOGIN_ATTEMPTS + ".",
                        "Login Failed",
                        javax.swing.JOptionPane.ERROR_MESSAGE);

                // Clear OTP field only
                otpField.setText("");
                otpField.requestFocus();
            }
        }
    }

    // Variables declaration - Modern Components
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JLabel welcomeLabel;
    private javax.swing.JLabel subtitleLabel;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JPanel loginCard;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JButton closeBtn;
    private javax.swing.JButton minimizeBtn;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel formPanel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel otpLabel;
    private javax.swing.JPasswordField otpField;
    private javax.swing.JButton getOtpBtn;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton loginBtn;
    private javax.swing.JButton resetBtn;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }
}